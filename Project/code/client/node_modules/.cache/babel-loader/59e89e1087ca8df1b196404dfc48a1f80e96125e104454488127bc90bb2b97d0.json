{"ast":null,"code":"import { UserInfo } from \"../Models/user\";\nconst baseURL = \"http://localhost:3001/ezelectronics/\";\n\n/** ------------------- Access APIs ------------------------ */\n\nasync function login(username, password) {\n  let response = await fetch(baseURL + \"sessions\", {\n    method: 'POST',\n    credentials: \"include\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  });\n  if (response.ok) {\n    const user = await response.json();\n    return user;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Something went wrong\");\n  }\n}\nasync function logOut() {\n  await fetch(baseURL + 'sessions/current', {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n}\nasync function getUserInfo() {\n  const response = await fetch(baseURL + 'sessions/current', {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const user = await response.json();\n    return user;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\n\n/** ------------------- User APIs ------------------------ */\n\nasync function register(username, name, surname, password, role) {\n  let response = await fetch(baseURL + \"users\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      name: name,\n      surname: surname,\n      password: password,\n      role: role\n    })\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Something went wrong\");\n  }\n}\nasync function getUserByUsername(username) {\n  const response = await fetch(baseURL + \"users/\" + username, {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const user = await response.json();\n    return new UserInfo(user.username, user.name, user.surname, user.role, user.address, user.birthdate);\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\nasync function updateUserInfo(username, name, surname, address, birthdate) {\n  const response = await fetch(baseURL + \"users/\" + username, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: name,\n      surname: surname,\n      address: address,\n      birthdate: birthdate\n    }),\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Something went wrong\");\n  }\n}\nasync function deleteUser(username) {\n  let response = await fetch(baseURL + \"users/\" + username, {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Something went wrong\");\n  }\n}\nasync function getAllUsers() {\n  const response = await fetch(baseURL + \"users\", {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const users = await response.json();\n    return users;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\nasync function getUsersByRole(role) {\n  const response = await fetch(baseURL + \"users/roles/\" + role, {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const users = await response.json();\n    return users;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\nasync function deleteAllUsers() {\n  let response = await fetch(baseURL + \"users\", {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\n\n/** ------------------- Product APIs ------------------------ */\n\nasync function registerProducts(productInfo) {\n  let response = await fetch(baseURL + \"products\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      model: productInfo.model,\n      category: productInfo.category,\n      details: productInfo.details,\n      sellingPrice: productInfo.sellingPrice,\n      quantity: productInfo.quantity\n    })\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function changeProductQuantity(model, quantity, changeDate) {\n  let response = await fetch(baseURL + \"products/\" + model, {\n    method: 'PATCH',\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      quantity: quantity,\n      changeDate: changeDate\n    })\n  });\n  if (response.ok) {\n    const quantity = await response.json();\n    return quantity;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function sellProduct(model, quantity, sellingDate) {\n  let response = await fetch(baseURL + \"products/\" + model + \"/sell\", {\n    method: 'PATCH',\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      quantity: quantity,\n      sellingDate: sellingDate\n    })\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function getProducts(grouping, category, model) {\n  let url = baseURL + \"products\";\n  if (grouping || category || model) {\n    url += \"?\";\n    if (grouping) url += \"grouping=\" + grouping + \"&\";\n    if (category) url += \"category=\" + category + \"&\";\n    if (model) url += \"model=\" + model + \"&\";\n  }\n  const response = await fetch(url, {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const products = await response.json();\n    return products;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n  }\n}\nasync function getAvailableProducts(grouping, category, model) {\n  let url = baseURL + \"products/available\";\n  if (grouping || category || model) {\n    url += \"?\";\n    if (grouping) url += \"grouping=\" + grouping + \"&\";\n    if (category) url += \"category=\" + category + \"&\";\n    if (model) url += \"model=\" + model + \"&\";\n  }\n  const response = await fetch(url, {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const products = await response.json();\n    return products;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\nasync function deleteAllProducts() {\n  let response = await fetch(baseURL + \"products\", {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function deleteProduct(model) {\n  let response = await fetch(baseURL + \"products/\" + model, {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\n\n/** ------------------- Cart APIs ------------------------ */\n\nasync function getCart() {\n  const response = await fetch(baseURL + \"carts\", {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const cart = await response.json();\n    return cart;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\nasync function addToCart(model) {\n  let response = await fetch(baseURL + \"carts\", {\n    method: 'POST',\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      model: model\n    })\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function checkoutCart() {\n  let response = await fetch(baseURL + \"carts/\", {\n    method: 'PATCH',\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function getCustomerCarts() {\n  const response = await fetch(baseURL + \"carts/history\", {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const carts = await response.json();\n    return carts;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\nasync function removeProductFromCart(model) {\n  let response = await fetch(baseURL + \"carts/products/\" + model, {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function clearCart() {\n  let response = await fetch(baseURL + \"carts/current\", {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function deleteAllCarts() {\n  let response = await fetch(baseURL + \"carts\", {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function getAllCarts() {\n  const response = await fetch(baseURL + \"carts/all\", {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const carts = await response.json();\n    return carts;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\n\n/** ------------------- Review APIs ------------------------ */\n\nasync function addReview(model, score, comment) {\n  let response = await fetch(baseURL + \"reviews/\" + model, {\n    method: 'POST',\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      score: score,\n      comment: comment\n    })\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function getProductReviews(model) {\n  const response = await fetch(baseURL + \"reviews/\" + model, {\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    const reviews = await response.json();\n    return reviews;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw new Error(\"Error. Please reload the page\");\n  }\n}\nasync function deleteProductReview(model) {\n  let response = await fetch(baseURL + \"reviews/\" + model, {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function deleteReviewsOfProduct(model) {\n  let response = await fetch(baseURL + \"reviews/\" + model + \"/all\", {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nasync function deleteAllReviews() {\n  let response = await fetch(baseURL + \"reviews\", {\n    method: 'DELETE',\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    return;\n  } else {\n    const errDetail = await response.json();\n    if (errDetail.error) throw errDetail.error;\n    if (errDetail.message) throw errDetail.message;\n    throw \"Something went wrong\";\n  }\n}\nconst API = {\n  login,\n  logOut,\n  getUserInfo,\n  register,\n  getUserByUsername,\n  updateUserInfo,\n  deleteUser,\n  getAllUsers,\n  getUsersByRole,\n  deleteAllUsers,\n  registerProducts,\n  changeProductQuantity,\n  sellProduct,\n  getProducts,\n  getAvailableProducts,\n  deleteAllProducts,\n  deleteProduct,\n  getCart,\n  addToCart,\n  checkoutCart,\n  getCustomerCarts,\n  removeProductFromCart,\n  clearCart,\n  deleteAllCarts,\n  getAllCarts,\n  addReview,\n  getProductReviews,\n  deleteProductReview,\n  deleteReviewsOfProduct,\n  deleteAllReviews\n};\nexport default API;","map":{"version":3,"names":["UserInfo","baseURL","login","username","password","response","fetch","method","credentials","headers","body","JSON","stringify","ok","user","json","errDetail","error","message","Error","logOut","getUserInfo","register","name","surname","role","getUserByUsername","address","birthdate","updateUserInfo","deleteUser","getAllUsers","users","getUsersByRole","deleteAllUsers","registerProducts","productInfo","model","category","details","sellingPrice","quantity","changeProductQuantity","changeDate","sellProduct","sellingDate","getProducts","grouping","url","products","getAvailableProducts","deleteAllProducts","deleteProduct","getCart","cart","addToCart","checkoutCart","getCustomerCarts","carts","removeProductFromCart","clearCart","deleteAllCarts","getAllCarts","addReview","score","comment","getProductReviews","reviews","deleteProductReview","deleteReviewsOfProduct","deleteAllReviews","API"],"sources":["C:/Users/lorys/OneDrive/Desktop/SoftEng/ezelectronics/code/client/src/API/API.ts"],"sourcesContent":["import { User } from \"../Components/Login/UserContext\";\r\nimport { Product } from \"../Models/product\";\r\nimport { UserInfo } from \"../Models/user\";\r\n\r\n\r\nconst baseURL = \"http://localhost:3001/ezelectronics/\"\r\n\r\n/** ------------------- Access APIs ------------------------ */\r\n\r\nasync function login(username: string, password: string) {\r\n    let response = await fetch(baseURL + \"sessions\", {\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username: username, password: password },)\r\n    })\r\n    if (response.ok) {\r\n        const user = await response.json()\r\n        return user\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw new Error(\"Something went wrong\")\r\n    }\r\n}\r\n\r\nasync function logOut() {\r\n    await fetch(baseURL + 'sessions/current', { method: 'DELETE', credentials: \"include\" });\r\n}\r\n\r\nasync function getUserInfo() {\r\n    const response = await fetch(baseURL + 'sessions/current', { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const user = await response.json()\r\n        return user;\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n}\r\n\r\n/** ------------------- User APIs ------------------------ */\r\n\r\n\r\nasync function register(username: string, name: string, surname: string, password: string, role: string) {\r\n    let response = await fetch(baseURL + \"users\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username: username, name: name, surname: surname, password: password, role: role },)\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw new Error(\"Something went wrong\")\r\n    }\r\n}\r\n\r\nasync function getUserByUsername(username: string) {\r\n    const response = await fetch(baseURL + \"users/\" + username, { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const user = await response.json()\r\n        return new UserInfo(user.username, user.name, user.surname, user.role, user.address, user.birthdate)\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n}\r\n\r\nasync function updateUserInfo(username: string, name: string, surname: string, address: string, birthdate: string) {\r\n    const response = await fetch(baseURL + \"users/\" + username, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name: name, surname: surname, address: address, birthdate: birthdate },),\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw new Error(\"Something went wrong\")\r\n    }\r\n}\r\n\r\nasync function deleteUser(username: string) {\r\n    let response = await fetch(baseURL + \"users/\" + username, {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw new Error(\"Something went wrong\")\r\n    }\r\n}\r\n\r\nasync function getAllUsers() {\r\n    const response = await fetch(baseURL + \"users\", { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const users = await response.json()\r\n        return users\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n\r\n}\r\n\r\nasync function getUsersByRole(role: string) {\r\n    const response = await fetch(baseURL + \"users/roles/\" + role, { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const users = await response.json()\r\n        return users\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n\r\n}\r\n\r\nasync function deleteAllUsers() {\r\n    let response = await fetch(baseURL + \"users\", {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\n/** ------------------- Product APIs ------------------------ */\r\n\r\nasync function registerProducts(productInfo: Product) {\r\n    let response = await fetch(baseURL + \"products\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ model: productInfo.model, category: productInfo.category, details: productInfo.details, sellingPrice: productInfo.sellingPrice, quantity: productInfo.quantity })\r\n    })\r\n\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function changeProductQuantity(model: string, quantity: number, changeDate: string | null) {\r\n    let response = await fetch(baseURL + \"products/\" + model, {\r\n        method: 'PATCH',\r\n        credentials: \"include\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ quantity: quantity, changeDate: changeDate })\r\n    })\r\n    if (response.ok) {\r\n        const quantity = await response.json()\r\n        return quantity\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function sellProduct(model: string, quantity: number, sellingDate: string | null) {\r\n    let response = await fetch(baseURL + \"products/\" + model + \"/sell\", {\r\n        method: 'PATCH',\r\n        credentials: \"include\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ quantity: quantity, sellingDate: sellingDate })\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function getProducts(grouping: string | null, category: string | null, model: string | null) {\r\n    let url = baseURL + \"products\"\r\n    if (grouping || category || model) {\r\n        url += \"?\"\r\n        if (grouping)\r\n            url += \"grouping=\" + grouping + \"&\"\r\n        if (category)\r\n            url += \"category=\" + category + \"&\"\r\n        if (model)\r\n            url += \"model=\" + model + \"&\"\r\n    }\r\n    const response = await fetch(url, { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const products = await response.json()\r\n        return products\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n    }\r\n}\r\n\r\nasync function getAvailableProducts(grouping: string | null, category: string | null, model: string | null) {\r\n    let url = baseURL + \"products/available\"\r\n    if (grouping || category || model) {\r\n        url += \"?\"\r\n        if (grouping)\r\n            url += \"grouping=\" + grouping + \"&\"\r\n        if (category)\r\n            url += \"category=\" + category + \"&\"\r\n        if (model)\r\n            url += \"model=\" + model + \"&\"\r\n    }\r\n    const response = await fetch(url, { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const products = await response.json()\r\n        return products\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n}\r\n\r\nasync function deleteAllProducts() {\r\n    let response = await fetch(baseURL + \"products\", {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function deleteProduct(model: string) {\r\n    let response = await fetch(baseURL + \"products/\" + model, {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw \"Something went wrong\"\r\n    }\r\n\r\n}\r\n\r\n/** ------------------- Cart APIs ------------------------ */\r\n\r\nasync function getCart() {\r\n    const response = await fetch(baseURL + \"carts\", { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const cart = await response.json()\r\n        return cart\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n}\r\n\r\nasync function addToCart(model: string) {\r\n    let response = await fetch(baseURL + \"carts\", {\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ model: model })\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function checkoutCart() {\r\n    let response = await fetch(baseURL + \"carts/\", {\r\n        method: 'PATCH',\r\n        credentials: \"include\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function getCustomerCarts() {\r\n    const response = await fetch(baseURL + \"carts/history\", { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const carts = await response.json()\r\n        return carts\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n}\r\n\r\nasync function removeProductFromCart(model: string) {\r\n    let response = await fetch(baseURL + \"carts/products/\" + model, {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function clearCart() {\r\n    let response = await fetch(baseURL + \"carts/current\", {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function deleteAllCarts() {\r\n    let response = await fetch(baseURL + \"carts\", {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function getAllCarts() {\r\n    const response = await fetch(baseURL + \"carts/all\", { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const carts = await response.json()\r\n        return carts\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n\r\n}\r\n\r\n/** ------------------- Review APIs ------------------------ */\r\n\r\nasync function addReview(model: string, score: number, comment: string) {\r\n    let response = await fetch(baseURL + \"reviews/\" + model, {\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ score: score, comment: comment })\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function getProductReviews(model: string) {\r\n    const response = await fetch(baseURL + \"reviews/\" + model, { credentials: \"include\" })\r\n    if (response.ok) {\r\n        const reviews = await response.json()\r\n        return reviews\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw new Error(\"Error. Please reload the page\")\r\n    }\r\n}\r\n\r\nasync function deleteProductReview(model: string) {\r\n    let response = await fetch(baseURL + \"reviews/\" + model, {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nasync function deleteReviewsOfProduct(model: string) {\r\n    let response = await fetch(baseURL + \"reviews/\" + model + \"/all\", {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw \"Something went wrong\"\r\n    }\r\n\r\n}\r\n\r\nasync function deleteAllReviews() {\r\n    let response = await fetch(baseURL + \"reviews\", {\r\n        method: 'DELETE',\r\n        credentials: \"include\"\r\n    })\r\n    if (response.ok) {\r\n        return\r\n    } else {\r\n        const errDetail = await response.json();\r\n        if (errDetail.error)\r\n            throw errDetail.error\r\n        if (errDetail.message)\r\n            throw errDetail.message\r\n        throw \"Something went wrong\"\r\n    }\r\n}\r\n\r\nconst API = {\r\n    login, logOut, getUserInfo,\r\n    register, getUserByUsername, updateUserInfo, deleteUser, getAllUsers, getUsersByRole, deleteAllUsers,\r\n    registerProducts, changeProductQuantity, sellProduct, getProducts, getAvailableProducts, deleteAllProducts, deleteProduct,\r\n    getCart, addToCart, checkoutCart, getCustomerCarts, removeProductFromCart, clearCart, deleteAllCarts, getAllCarts,\r\n    addReview, getProductReviews, deleteProductReview, deleteReviewsOfProduct, deleteAllReviews\r\n}\r\nexport default API"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}